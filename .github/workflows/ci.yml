name: Build and Deploy

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Generate OpenAPI Client
        run: npx @openapitools/openapi-generator-cli generate -i ./src/api/openapi/spec.yaml -g typescript -o ./src/api/build
      - name: Archive OpenAPI Client Build
        uses: actions/upload-artifact@v2
        with:
          name: openapi-build
          path: ./src/api/build
      - name: Build Project
        run: npm run build --if-present
      - name: Lint Code
        run: npm run lint
      - name: Run Tests
        run: npm test

  publish-openapi-to-registry:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Retrieve OpenAPI Client Build
        uses: actions/download-artifact@v2
        with:
          name: openapi-build
          path: ./src/api/build
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org/
      - name: Configure Package Metadata
        run: |
          cd ./src/api/build
          timestamp=$(date +%s)
          jq '.name = "@morsof/resources-service-api" | .version = "1.0.'${timestamp}'"' package.json > temp.json
          mv temp.json package.json
      - name: Publish to npm Registry
        run: cd ./src/api/build && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  docker-deploy:
    needs: build-and-test
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set Up QEMU Emulator
        uses: docker/setup-qemu-action@v2
      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: morsof48/resources-service:latest
